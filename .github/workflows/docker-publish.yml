name: Build and Push Docker Image

on:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  create-tag-release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get latest tag
        id: previoustag
        run: |
          # Get latest tag or default to 1.0.0 if no tags exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          echo "latest_tag=${latest_tag}" >> $GITHUB_OUTPUT
      
      - name: Generate version
        id: version
        run: |
          # Split latest tag into major, minor, patch
          IFS='.' read -r major minor patch <<< "${{ steps.previoustag.outputs.latest_tag }}"
          # Increment patch version
          new_patch=$((patch + 1))
          # Create new version
          new_version="${major}.${minor}.${new_patch}"
          echo "version=${new_version}" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_BOT }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

  build-and-push:
    needs: create-tag-release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: tinkeshwar/video-optimizer-ai:${{ github.ref_name }}

          
